name: heroku/heroku-nodejs-plugin/build-plugin
on:
  push:
env:
  GITHUB_TOKEN: xxxxxxx
jobs:
  build-and-test:
    if: ${{ !contains('refs/heads//.*/', github.ref) }}
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: python:3.8
    env:
      node-version: xxxxxxx
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ env.node-version }}"
    - name: Install dependencies
      run: npm install --production
    - name: Build plugin
      run: npm run build
    - name: Run tests
      run: npm test
    - run: mkdir heroku-nodejs-plugin-${{ env.node-version }}
    - run: cp heroku-nodejs-plugin/* heroku-nodejs-plugin-${{ env.node-version }}
    - uses: actions/upload-artifact@v2
      with:
        path: "./heroku-nodejs-plugin-${{ env.node-version }}"
  build-and-test_1:
    if: ${{ !contains('refs/heads//.*/', github.ref) }}
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: python:3.8
    env:
      node-version: xxxxxxx
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ env.node-version }}"
    - name: Install dependencies
      run: npm install --production
    - name: Build plugin
      run: npm run build
    - name: Run tests
      run: npm test
    - run: mkdir heroku-nodejs-plugin-${{ env.node-version }}
    - run: cp heroku-nodejs-plugin/* heroku-nodejs-plugin-${{ env.node-version }}
    - uses: actions/upload-artifact@v2
      with:
        path: "./heroku-nodejs-plugin-${{ env.node-version }}"
  build-and-test_2:
    if: ${{ !contains('refs/heads//.*/', github.ref) }}
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: python:3.8
    env:
      node-version: xxxxxxx
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ env.node-version }}"
    - name: Install dependencies
      run: npm install --production
    - name: Build plugin
      run: npm run build
    - name: Run tests
      run: npm test
    - run: mkdir heroku-nodejs-plugin-${{ env.node-version }}
    - run: cp heroku-nodejs-plugin/* heroku-nodejs-plugin-${{ env.node-version }}
    - uses: actions/upload-artifact@v2
      with:
        path: "./heroku-nodejs-plugin-${{ env.node-version }}"
  build-and-test_3:
    if: ${{ !contains('refs/heads//.*/', github.ref) }}
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: python:3.8
    env:
      node-version: xxxxxxx
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ env.node-version }}"
    - name: Install dependencies
      run: npm install --production
    - name: Build plugin
      run: npm run build
    - name: Run tests
      run: npm test
    - run: mkdir heroku-nodejs-plugin-${{ env.node-version }}
    - run: cp heroku-nodejs-plugin/* heroku-nodejs-plugin-${{ env.node-version }}
    - uses: actions/upload-artifact@v2
      with:
        path: "./heroku-nodejs-plugin-${{ env.node-version }}"
  create-github-release:
    if: ${{ !contains('refs/heads//.*/', github.ref) }}
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: ubuntu
    needs:
    - Build and test Node 18 plugin
    - Build and test Node 17 plugin
    - Build and test Node 16 plugin
    - Build and test Node 14 plugin
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "/tmp/workspace"
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    - name: Install dependencies
      run: npm install --ignore-scripts
    - name: Create release
      run: "./scripts/create-release.sh"
  push-assets-to-github:
    if: ${{ !contains('refs/heads//.*/', github.ref) }}
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: ubuntu
    needs:
    - Create GitHub Release
    env:
      node-version: xxxxxxx
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "/tmp/workspace"
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ env.node-version }}"
    - name: Install dependencies
      run: npm install --ignore-scripts
    - name: Make plugin directory
      run: mkdir heroku-nodejs-plugin
    - name: Copy plugin to workspace
      run: cp -r /tmp/workspace/heroku-nodejs-plugin-${{ env.node-version }}/* heroku-nodejs-plugin
    - name: Run deploy script
      run: "./scripts/upload-assets.sh ${{ env.node-version }}"
  push-assets-to-github_1:
    if: ${{ !contains('refs/heads//.*/', github.ref) }}
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: ubuntu
    needs:
    - Create GitHub Release
    env:
      node-version: xxxxxxx
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "/tmp/workspace"
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ env.node-version }}"
    - name: Install dependencies
      run: npm install --ignore-scripts
    - name: Make plugin directory
      run: mkdir heroku-nodejs-plugin
    - name: Copy plugin to workspace
      run: cp -r /tmp/workspace/heroku-nodejs-plugin-${{ env.node-version }}/* heroku-nodejs-plugin
    - name: Run deploy script
      run: "./scripts/upload-assets.sh ${{ env.node-version }}"
  push-assets-to-github_2:
    if: ${{ !contains('refs/heads//.*/', github.ref) }}
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: ubuntu
    needs:
    - Create GitHub Release
    env:
      node-version: xxxxxxx
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "/tmp/workspace"
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ env.node-version }}"
    - name: Install dependencies
      run: npm install --ignore-scripts
    - name: Make plugin directory
      run: mkdir heroku-nodejs-plugin
    - name: Copy plugin to workspace
      run: cp -r /tmp/workspace/heroku-nodejs-plugin-${{ env.node-version }}/* heroku-nodejs-plugin
    - name: Run deploy script
      run: "./scripts/upload-assets.sh ${{ env.node-version }}"
  push-assets-to-github_3:
    if: ${{ !contains('refs/heads//.*/', github.ref) }}
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: ubuntu
    needs:
    - Create GitHub Release
    env:
      node-version: xxxxxxx
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "/tmp/workspace"
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ env.node-version }}"
    - name: Install dependencies
      run: npm install --ignore-scripts
    - name: Make plugin directory
      run: mkdir heroku-nodejs-plugin
    - name: Copy plugin to workspace
      run: cp -r /tmp/workspace/heroku-nodejs-plugin-${{ env.node-version }}/* heroku-nodejs-plugin
    - name: Run deploy script
      run: "./scripts/upload-assets.sh ${{ env.node-version }}"
